{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","UserInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","float","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","is_staff","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","isAdmin","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","stockStatus","countInStock","ListGroup","ListGroupItem","description","xs","disabled","size","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","controlID","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","bordered","hover","EditUserScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","UserEditScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f64a1f9.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAIL_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, \r\n    productDetailsReducer,\r\n    productDeleteReducer, \r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer, \r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n\r\n} \r\n    from './reducers/userReducers'\r\nimport { orderCreateReducer, \r\n    orderDetailsReducer, \r\n    orderListMyReducer,\r\n    orderListReducer,\r\n} \r\n    from './reducers/orderReducers'\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList:userListReducer,\r\n    userDelete:userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderListMy:orderListMyReducer,\r\n    orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItem') ?\r\n    JSON.parse(localStorage.getItem('cartItem')) : []\r\n\r\nconst UserInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart:{cartItems:cartItemsFromStorage,\r\n    shippingAddress:shippingAddressFromStorage,\r\n    },\r\n    userLogin:{userInfo:UserInfoFromStorage},\r\n\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} \r\n    from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state={cartItems:[], shippingAddress: {}}, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM: \r\n        const item = action.payload\r\n        const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n        if(existItem){\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.map(x => \r\n                    x.product === existItem.product ? item : x\r\n                    )\r\n            }\r\n        }else{\r\n            return {\r\n                ...state,\r\n                cartItems:[...state.cartItems, item]\r\n            }\r\n        }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems:state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state, \r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod:action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n } from '../constants/userConstants'\r\n\r\n export const userLoginReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading:true}\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading:false, userInfo: action.payload}\r\n        \r\n        case USER_LOGIN_FAIL:\r\n            return {loading:false, error: action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {user: {}}, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n            case USER_DETAILS_RESET:\r\n                return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success:true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = {users:[]}, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return {loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return {users: []}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return {loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user:{}}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return {user: {}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n} \r\n    from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n            case ORDER_CREATE_RESET:\r\n                return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading:true, orderItems:[], shippingAddress:{}} ,action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import axios from 'axios'\r\nimport { USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n } from '../constants/userConstants'\r\n\r\n import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n export const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) =>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type:USER_LIST_RESET})\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from \"react\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\nfunction Header() {\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const logoutHandler = () =>{\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>Home</Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" float='right'/>\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <SearchBox />\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i>  Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                </NavDropdown>\r\n              ): (\r\n                <LinkContainer to=\"/login\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-user\"></i>  Sign In\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              ) }\r\n\r\n                {userInfo && userInfo.is_staff && (\r\n                  <NavDropdown title='Admin' id='adminmenue'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                </NavDropdown>\r\n                )}\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <footer>\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"text-center py-3\">\r\n              Copyright &copy; Computer Shop\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction Rating({ value, text, color }) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= 0.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= 1.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span className=\"ml-2\">{text && text}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nfunction Product({ product }) {\r\n\r\n  return (\r\n    <div>\r\n      \r\n        <Card className=\"my-3 py-3 rounded\">\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Img src={product.image} />\r\n        </Link>\r\n  \r\n        <Card.Body>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Card.Title as=\"div\">\r\n              <strong>{product.name}</strong>\r\n            </Card.Title>\r\n          </Link>\r\n        </Card.Body>\r\n  \r\n        <Card.Text as=\"div\">\r\n          <div className=\"pl-3\">\r\n            <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} Review`}\r\n              color={\"gold\"}\r\n            />\r\n          </div>\r\n        </Card.Text>\r\n  \r\n        <Card.Text as=\"h4\">\r\n          <div className=\"pl-3\">${product.price}</div>\r\n        </Card.Text>\r\n      </Card>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner animation='border' role='status' style={ {height: '100px', width: '100px', margin: 'auto', display: 'block'}}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-white'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, pages, page } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate pages={pages} page={page} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Card,\r\n  ListGroupItem,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductScreen({ match, history }) {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n    success: successProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n        setRating(0)\r\n        setComment('')\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n\r\n    dispatch(listProductDetails(match.params.id))\r\n\r\n}, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(\r\n        match.params.id, {\r\n        rating,\r\n        comment\r\n    }\r\n    ))\r\n}\r\n\r\n  let stockStatus = false;\r\n\r\n  if (product.countInStock > 0) {\r\n    stockStatus = true;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroupItem>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroupItem>\r\n\r\n                <ListGroupItem>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} Reviews`}\r\n                    className=\"ml-2\"\r\n                    color=\"gold\"\r\n                  />\r\n                </ListGroupItem>\r\n\r\n                <ListGroupItem>\r\n                  Description: {product.description}\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroupItem>\r\n                    <Row>\r\n                      <Col className=\"ml-2\">Price: ${product.price}</Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n\r\n                  <ListGroupItem>\r\n                    <Row>\r\n                      <Col className=\"ml-2\">\r\n                        <strong>\r\n                          {stockStatus == true ? \"In Stock\" : \"Out of Stock\"}\r\n                        </strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroupItem>\r\n                      <Row>\r\n                        <Col className=\"ml-2\">Qty</Col>\r\n                        <Col xs=\"auto\">\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroupItem>\r\n                  )}\r\n\r\n                  <ListGroupItem>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      disabled={stockStatus == false}\r\n                      type=\"button\"\r\n                      size=\"lg\"\r\n                      variant=\"dark\"\r\n                    >\r\n                      Add to Crate\r\n                    </Button>\r\n                  </ListGroupItem>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          \r\n\r\n          <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>Sign In</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n          \r\n\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios'\r\n\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            product:data._id,\r\n            name:data.name,\r\n            image:data.image,\r\n            price:data.price,\r\n            countInStock:data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n\r\n}","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Card,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n      dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n      history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n        <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            {cartItems.length === 0 ? (\r\n                <Message variant='info'>\r\n                    Your cart is empty <Link to='/'>Go Back</Link>\r\n                </Message>\r\n            ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {\r\n\r\n                                                [...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                        ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n                <ListGroup.Item>\r\n                    <Button\r\n                        type='button'\r\n                        className='btn-block'\r\n                        disabled={cartItems.length === 0}\r\n                        onClick={checkoutHandler}\r\n                    >\r\n                        Proceed To Checkout\r\n                    </Button>\r\n                </ListGroup.Item>\r\n\r\n\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n)\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({location, history}) {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                \r\n                <Form.Group controlID='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                     type='email'\r\n                     placeholder='Enter Email'\r\n                     value = {email}\r\n                     onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                       \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlID='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                     type='password'\r\n                     placeholder='Enter Password'\r\n                     value = {password}\r\n                     onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                       \r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' value='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Don't Have an Account? <Link to={redirect ? `/register?redirect=${redirect}`: '/register'}>Sign Up Now</Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\n\r\nfunction ProfileScreen({history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }else{\r\n            if(!user || !user.name || success || userInfo._id !== user._id){\r\n                dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id':user._id,\r\n                'name':name,\r\n                'email': email,\r\n                'password':password\r\n        }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        \r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        \r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n\r\n            </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ): errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ): (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0,10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>{order.isDelivered ? order.deliveredAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant=\"outline-primary\"><strong>Order Details</strong></Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n            \r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import { ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL,\r\n \r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n} \r\n    from '../constants/orderConstants'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n \r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n \r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className = 'justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                    <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                ): (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )} \r\n                \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                    <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                ): (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )} \r\n                \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                ): (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )} \r\n                \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                    <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                ): (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )} \r\n                \r\n            </Nav.Item>\r\n            \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nfunction ShippingScreen({history}) { \r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City Name'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country Name'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Continue\r\n            </Button>\r\n\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nfunction PaymentScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal') \r\n\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    } \r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>\r\n                        Select Method\r\n                    </Form.Label>\r\n                    <Col>\r\n                    <Form.Check\r\n                        type='radio'\r\n                        label='Paypal or Credit Card'\r\n                        id='paypal'\r\n                        name='paymentMethod'\r\n                        checked\r\n                        onChange = {(e) => setPaymentMethod(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, error, success } = orderCreate;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\r\n  cart.taxPrice = Number(0.082 * cart.itemsPrice).toFixed(2);\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [success, history]);\r\n\r\n  const placeOrder = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                {\"  \"}\r\n                {cart.shippingAddress.postalCode},{\"  \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message variant=\"info\">Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrder}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getOrderDetails } from \"../actions/orderActions\";\r\n\r\nfunction OrderScreen({ match }) {\r\n  const orderId = match.params.id\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, error, loading } = orderDetails\r\n  if (!loading && !error) {\r\n    order.itemsPrice = order.orderItems\r\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n      .toFixed(2)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!order || order._id !== Number(orderId)) {\r\n      dispatch(getOrderDetails(orderId));\r\n    }\r\n  }, [order, orderId]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <div>\r\n      <h1>Order Number: {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name: </strong>{order.user.name}</p>\r\n              <p><strong>Email: </strong>{order.user.email}</p>\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                {\"  \"}\r\n                {order.shippingAddress.postalCode},{\"  \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>Order Delivered at {order.deliveredAt}</Message>\r\n              ):(\r\n                order.isPaid ? (\r\n                  <Message variant='warning'>Delivering Your Order</Message>\r\n                ): <Message variant='warning'>The order will start delivering after processing your payment</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Payment Recieved at {order.paidAt}</Message>\r\n              ):(\r\n                <Message variant='warning'>Checking payment</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message variant=\"info\">Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                          <p>Test</p>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { listUsers, deleteUser, createProduct } from '../actions/userActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction UserListScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success:successDelete} = userDelete\r\n    \r\n    useEffect(() => {\r\n        if(userInfo && userInfo.is_staff){\r\n            dispatch(listUsers())\r\n        }\r\n        else\r\n        {\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n        \r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm(`Are you sure you want to delete this user?`)){\r\n            dispatch(deleteUser(id))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<loading />)\r\n                : error \r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Admin</th>\r\n                            <th>Edit User</th>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.is_staff ? (\r\n                                        <i className = 'fas fa-check' style={{color: 'green'}}> Admin</i>\r\n                                    ): (\r\n                                        <i className = 'fas fa-check' style={{color: 'red'}}> User</i>\r\n                                    )}</td>\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                            <Button variant='primary' className='btn-sm'> \r\n                                                Edit\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}> \r\n                                                Delete\r\n                                            </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                   \r\n                )\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction EditUserScreen({ match, history }) {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error:errorUpdate, loading:loadingUpdate, success:successUpdate } = userUpdate;\r\n\r\n  useEffect(() => {\r\n\r\n      if(successUpdate){\r\n        dispatch({type:USER_UPDATE_RESET})\r\n        history.push('/admin/userlist')\r\n      }else{\r\n        if(!user.name || user._id !== Number(userId)) {\r\n          dispatch(getUserDetails(userId))\r\n        }else{\r\n            setName(user.name)\r\n            setName(user.email)\r\n            setName(user.isAdmin)\r\n        }\r\n\r\n      }\r\n  }, [user, userId, successUpdate, history ]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({_id:user._id, name, email, isAdmin}))\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/userlist\">Back</Link>\r\n      {loadingUpdate && <Loader />}\r\n      {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditUserScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.is_staff) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='primary' className='btn-sm'>\r\n                                                        Edit\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    Delete\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.is_staff) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import {Container} from 'react-bootstrap'\r\n\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\n\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\n\r\nimport CartScreen from './screens/CartScreen'\r\n\r\nimport LoginScreen from './screens/LoginScreen'\r\n\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\n\r\nimport PaymentScreen from './screens/PaymentScreen'\r\n\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\n\r\nimport OrderScreen from './screens/OrderScreen'\r\n\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-4\">\r\n        <Container>\r\n          <h1> Computer Shop </h1>\r\n          <Route path=\"/\" component={HomeScreen} exact/>\r\n          <Route path=\"/login\" component={LoginScreen} exact/>\r\n          <Route path=\"/register\" component={RegisterScreen} exact/>\r\n          <Route path=\"/profile\" component={ProfileScreen} exact/>\r\n          <Route path=\"/payment\" component={PaymentScreen} exact/>\r\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} exact/>\r\n          <Route path=\"/order/:id\" component={OrderScreen} exact/>\r\n          <Route path=\"/product/:id\" component={ProductScreen}/>\r\n          <Route path=\"/cart/:id?\" component={CartScreen}/>\r\n          <Route path=\"/shipping\" component={ShippingScreen} exact/>\r\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} exact/>\r\n          <Route path=\"/admin/userlist\" component={UserListScreen} exact/>\r\n          <Route path=\"/admin/productlist\" component={ProductListScreen} exact/>\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} exact/>\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}